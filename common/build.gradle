architectury {
    common rootProject.enabled_platforms.split(',')
}

dependencies {
    // We depend on Fabric Loader here to use the Fabric @Environment annotations,
    // which get remapped to the correct annotations on each platform.
    // Do NOT use other classes from Fabric Loader.
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury:$rootProject.architectury_api_version"

    // Pull in Nashorn so we can bind to it
    implementation "org.openjdk.nashorn:nashorn-core:${rootProject.nashorn_version}"

    modImplementation "com.github.glitchfiend:GlitchCore-fabric:${minecraft_version}-${rootProject.glitchcore_version}"
    modImplementation "com.github.glitchfiend:SereneSeasons-fabric:${minecraft_version}-${rootProject.serene_seasons_version}"

    // Referencing the Fabric project for API
    modApi("me.shedaniel.cloth:cloth-config-fabric:${rootProject.clothapi_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

loom {
    accessWidenerPath = file("src/main/resources/dsurround.accesswidener")
}